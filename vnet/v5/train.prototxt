layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "label"
  python_param {
    module: "VnetDataLayer"
    layer: "VnetDataLayer"
    param_str: "{\'vol_size\': 64, \'iter_count\': 100000, \'rotate_ratio\': 0.9, \'queue_size\': 30, \'phase\': \'train\', \'data_path\': \'d:/project/tianchi/data/\', \'shift_ratio\': 0.9, \'histogram_shift_ratio\': 0.9, \'net_path\': \'v5/\', \'batch_size\': 2}"
  }
}

# input

layer {
  name: "conv_input_split"
  type: "Convolution"
  bottom: "data"
  top: "conv_input_split"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 16
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "constant" value: 1.0 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "conv_input_64_1"
  type: "Convolution"
  bottom: "conv_input_split"
  top: "conv_input_64_1"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 8
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_input_64_1"
  type: "BatchNorm"
  bottom: "conv_input_64_1"
  top: "bn_input_64_1"
}

layer {
  name: "relu_input_64_1"
  type: "PReLU"
  bottom: "bn_input_64_1"
  top: "relu_input_64_1"
}

layer {
  name: "conv_input_64_2"
  type: "Convolution"
  bottom: "relu_input_64_1"
  top: "conv_input_64_2"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 8
    kernel_size: 3
    pad: 1
    stride: 1
    group: 2
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_input_64_2"
  type: "BatchNorm"
  bottom: "conv_input_64_2"
  top: "bn_input_64_2"
}

layer {
  name: "relu_input_64_2"
  type: "PReLU"
  bottom: "bn_input_64_2"
  top: "relu_input_64_2"
}

layer {
  name: "conv_input_64_3"
  type: "Convolution"
  bottom: "relu_input_64_2"
  top: "conv_input_64_3"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 16
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_input_64_3"
  type: "BatchNorm"
  bottom: "conv_input_64_3"
  top: "bn_input_64_3"
}

layer {
  name: "add_input_64"
  type: "Eltwise"
  bottom: "conv_input_split"
  bottom: "bn_input_64_3"
  top: "add_input_64"
  eltwise_param { operation: SUM }
}

layer {
  name: "relu_add_input_64"
  type: "PReLU"
  bottom: "add_input_64"
  top: "relu_add_input_64"
}

# pooling
layer {
  name: "conv_pooling_i64c128o32"
  type: "Convolution"
  bottom: "relu_add_input_64"
  top: "conv_pooling_i64c128o32"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 128
    kernel_size: 2
    pad: 0
    stride: 2
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "conv_input_32_1"
  type: "Convolution"
  bottom: "conv_pooling_i64c128o32"
  top: "conv_input_32_1"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 64
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_input_32_1"
  type: "BatchNorm"
  bottom: "conv_input_32_1"
  top: "bn_input_32_1"
}

layer {
  name: "relu_input_32_1"
  type: "PReLU"
  bottom: "bn_input_32_1"
  top: "relu_input_32_1"
}

layer {
  name: "conv_input_32_2"
  type: "Convolution"
  bottom: "relu_input_32_1"
  top: "conv_input_32_2"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    group: 16
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_input_32_2"
  type: "BatchNorm"
  bottom: "conv_input_32_2"
  top: "bn_input_32_2"
}

layer {
  name: "relu_input_32_2"
  type: "PReLU"
  bottom: "bn_input_32_2"
  top: "relu_input_32_2"
}

layer {
  name: "conv_input_32_3"
  type: "Convolution"
  bottom: "relu_input_32_2"
  top: "conv_input_32_3"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_input_32_3"
  type: "BatchNorm"
  bottom: "conv_input_32_3"
  top: "bn_input_32_3"
}

layer {
  name: "add_input_32"
  type: "Eltwise"
  bottom: "conv_pooling_i64c128o32"
  bottom: "bn_input_32_3"
  top: "add_input_32"
  eltwise_param { operation: SUM }
}

layer {
  name: "relu_add_input_32"
  type: "PReLU"
  bottom: "add_input_32"
  top: "relu_add_input_32"
}

# pooling

layer {
  name: "conv_pooling_i32c256o16"
  type: "Convolution"
  bottom: "relu_add_input_32"
  top: "conv_pooling_i32c256o16"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 256
    kernel_size: 2
    pad: 0
    stride: 2
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

# vally

layer {
  name: "conv_vally_1"
  type: "Convolution"
  bottom: "conv_pooling_i32c256o16"
  top: "conv_vally_1"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_vally_1"
  type: "BatchNorm"
  bottom: "conv_vally_1"
  top: "bn_vally_1"
}

layer {
  name: "relu_vally_1"
  type: "PReLU"
  bottom: "bn_vally_1"
  top: "relu_vally_1"
}

layer {
  name: "conv_vally_2"
  type: "Convolution"
  bottom: "relu_vally_1"
  top: "conv_vally_2"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    group: 32
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_vally_2"
  type: "BatchNorm"
  bottom: "conv_vally_2"
  top: "bn_vally_2"
}

layer {
  name: "relu_vally_2"
  type: "PReLU"
  bottom: "bn_vally_2"
  top: "relu_vally_2"
}

layer {
  name: "conv_vally_3"
  type: "Convolution"
  bottom: "relu_vally_2"
  top: "conv_vally_3"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_vally_3"
  type: "BatchNorm"
  bottom: "conv_vally_3"
  top: "bn_vally_3"
}

layer {
  name: "add_vally"
  type: "Eltwise"
  bottom: "conv_pooling_i32c256o16"
  bottom: "bn_vally_3"
  top: "add_vally"
  eltwise_param { operation: SUM }
}

layer {
  name: "relu_add_vally"
  type: "PReLU"
  bottom: "add_vally"
  top: "relu_add_vally"
}

# depooling

layer {
  name: "deconv_depooling_i16c128o32"
  type: "Deconvolution"
  bottom: "relu_add_vally"
  top: "deconv_depooling_i16c128o32"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 128
    kernel_size: 2
    pad: 0
    stride: 2
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

# output

layer {
  name: "concat_output_32"
  type: "Concat"
  bottom: "relu_add_input_32"
  bottom: "deconv_depooling_i16c128o32"
  top: "concat_output_32"
  concat_param { axis: 1 }
}

layer {
  name: "conv_concat_i32c128o32"
  type: "Convolution"
  bottom: "concat_output_32"
  top: "conv_concat_i32c128o32"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "conv_output_32_1"
  type: "Convolution"
  bottom: "conv_concat_i32c128o32"
  top: "conv_output_32_1"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 64
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_output_32_1"
  type: "BatchNorm"
  bottom: "conv_output_32_1"
  top: "bn_output_32_1"
}

layer {
  name: "relu_output_32_1"
  type: "PReLU"
  bottom: "bn_output_32_1"
  top: "relu_output_32_1"
}

layer {
  name: "conv_output_32_2"
  type: "Convolution"
  bottom: "relu_output_32_1"
  top: "conv_output_32_2"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    group: 16
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_output_32_2"
  type: "BatchNorm"
  bottom: "conv_output_32_2"
  top: "bn_output_32_2"
}

layer {
  name: "relu_output_32_2"
  type: "PReLU"
  bottom: "bn_output_32_2"
  top: "relu_output_32_2"
}

layer {
  name: "conv_output_32_3"
  type: "Convolution"
  bottom: "relu_output_32_2"
  top: "conv_output_32_3"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_output_32_3"
  type: "BatchNorm"
  bottom: "conv_output_32_3"
  top: "bn_output_32_3"
}

layer {
  name: "add_output_32"
  type: "Eltwise"
  bottom: "conv_concat_i32c128o32"
  bottom: "bn_output_32_3"
  top: "add_output_32"
  eltwise_param { operation: SUM }
}

layer {
  name: "relu_add_output_32"
  type: "PReLU"
  bottom: "add_output_32"
  top: "relu_add_output_32"
}

# depooling

layer {
  name: "deconv_depooling_i32c16o64"
  type: "Deconvolution"
  bottom: "relu_add_output_32"
  top: "deconv_depooling_i32c16o64"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 16
    kernel_size: 2
    pad: 0
    stride: 2
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "concat_output"
  type: "Concat"
  bottom: "relu_add_input_64"
  bottom: "deconv_depooling_i32c16o64"
  top: "concat_output_64"
  concat_param { axis: 1 }
}

layer {
  name: "conv_concat_i64c16o64"
  type: "Convolution"
  bottom: "concat_output_64"
  top: "conv_concat_i64c16o64"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 16
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "conv_output_64_1"
  type: "Convolution"
  bottom: "conv_concat_i64c16o64"
  top: "conv_output_64_1"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 8
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_output_64_1"
  type: "BatchNorm"
  bottom: "conv_output_64_1"
  top: "bn_output_64_1"
}

layer {
  name: "relu_output_64_1"
  type: "PReLU"
  bottom: "bn_output_64_1"
  top: "relu_output_64_1"
}

layer {
  name: "conv_output_64_2"
  type: "Convolution"
  bottom: "relu_output_64_1"
  top: "conv_output_64_2"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 8
    kernel_size: 3
    pad: 1
    stride: 1
    group: 2
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_output_64_2"
  type: "BatchNorm"
  bottom: "conv_output_64_2"
  top: "bn_output_64_2"
}

layer {
  name: "relu_output_64_2"
  type: "PReLU"
  bottom: "bn_output_64_2"
  top: "relu_output_64_2"
}

layer {
  name: "conv_output_64_3"
  type: "Convolution"
  bottom: "relu_output_64_2"
  top: "conv_output_64_3"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 16
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "bn_output_64_3"
  type: "BatchNorm"
  bottom: "conv_output_64_3"
  top: "bn_output_64_3"
}

layer {
  name: "add_output_64"
  type: "Eltwise"
  bottom: "conv_concat_i64c16o64"
  bottom: "bn_output_64_3"
  top: "add_output_64"
  eltwise_param { operation: SUM }
}

layer {
  name: "relu_add_output_64"
  type: "PReLU"
  bottom: "add_output_64"
  top: "relu_add_output_64"
}

layer {
  name: "crop_output"
  type: "Crop"
  bottom: "relu_add_output_64"
  bottom: "label"
  top: "crop_output"
  crop_param: {
    offset: 16
  }
}

# 1 * 1 * 1 conv

layer {
  name: "conv_i32c2o32_output_4"
  type: "Convolution"
  bottom: "crop_output"
  top: "conv_i32c2o32_output_4"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0.0 }
  convolution_param {
    engine: CUDNN
    num_output: 2
    kernel_size: 1
    pad: 0
    stride: 1
    weight_filler { type: "msra" variance_norm: 2 }
    bias_filler { type: "constant" value: 0.0 }
  }
}

layer {
  name: "relu_output"
  type: "ReLU"
  bottom: "conv_i32c2o32_output_4"
  top: "relu_output"
}

layer {
  name: "reshape_output"
  type: "Reshape"
  bottom: "relu_output"
  top: "reshape_output"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 2
      dim: -1 # this should be 32768
    }
  }
}

layer {
  name: "reshape_label"
  type: "Reshape"
  bottom: "label"
  top: "reshape_label"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 1
      dim: -1 # this should be 32768
    }
  }
}

layer {
  name: "softmax_output"
  type: "Softmax"
  bottom: "reshape_output"
  top: "softmax_output"
}

layer {
  type: "DiceLoss"
  name: "loss"
  top: "loss"
  bottom: "softmax_output"
  bottom: "reshape_label"
}
